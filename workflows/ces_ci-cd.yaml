name: Client Engagement System CI/CD
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r api/requirements.txt
          npm ci
          
      - name: Run tests
        run: |
          pytest api/tests/
          npm test
          
  security_scan:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Security scan
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          
  deploy:
    needs: [test, security_scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Build and Deploy Frontend
        run: |
          npm ci
          npm run build
          aws s3 sync build/ s3://${{ secrets.WEBSITE_BUCKET }} --delete
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_ID }} --paths "/*"
          
      - name: Deploy API
        run: |
          cd api
          pip install -r requirements.txt
          zip -r function.zip .
          aws lambda update-function-code --function-name ${{ secrets.LAMBDA_FUNCTION }} --zip-file fileb://function.zip
          
      - name: Update Infrastructure
        run: |
          aws cloudformation deploy \
            --template-file infrastructure/ces_template.yaml \
            --stack-name client-engagement-system-${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }} \
            --parameter-overrides \
              Environment=${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }} \
              DomainName=${{ secrets.DOMAIN_NAME }} \
            --capabilities CAPABILITY_IAM
